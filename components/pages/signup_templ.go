// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "constructor/components"

func SignUp(errMsg string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<section class=\"flex justify-center items-center min-h-screen bg-gradient-to-b from-gray-50 to-gray-100\"><div class=\"w-full max-w-md mx-auto px-6\"><div class=\"relative bg-white rounded-2xl shadow-sm hover:shadow-md transition-all duration-300 p-8 space-y-8\"><div class=\"w-12 h-12 mx-auto mb-6\"><div class=\"w-full h-full rounded-lg bg-black\"></div></div><div class=\"text-center space-y-2\"><h1 class=\"text-2xl md:text-3xl font-semibold tracking-tight text-gray-900\">Создайте свою учетную запись</h1><p class=\"text-base text-gray-500\">Введите свои данные, чтобы начать</p></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if errMsg != "" {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"bg-red-50 border-l-4 border-red-500 p-4 rounded-lg\"><div class=\"flex\"><p class=\"text-sm text-red-700\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(errMsg)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/pages/signup.templ`, Line: 26, Col: 68}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p><button class=\"ml-auto text-sm text-red-700 hover:text-red-900 underline transition-colors\" onclick=\"window.location.href=&#39;/signin&#39;\">Вместо этого войдите в систему</button></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form class=\"space-y-6\" action=\"\" method=\"post\"><div class=\"space-y-5\"><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-700\">Username</label> <input class=\"w-full px-4 py-3 rounded-lg bg-gray-50 border border-gray-200 \r\n                                       placeholder-gray-400\r\n                                       transition-colors duration-200\r\n                                       focus:bg-white focus:outline-none focus:border-black focus:ring-1 focus:ring-black\" type=\"text\" name=\"username\" required minlength=\"4\" maxlength=\"64\" placeholder=\"Choose a username\"><p class=\"mt-1 text-sm text-gray-500\">Длина должна составлять от 4 до 64 символов</p></div><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-700\">Email</label> <input class=\"w-full px-4 py-3 rounded-lg bg-gray-50 border border-gray-200 \r\n                                       placeholder-gray-400\r\n                                       transition-colors duration-200\r\n                                       focus:bg-white focus:outline-none focus:border-black focus:ring-1 focus:ring-black\" type=\"email\" name=\"email\" required autofocus placeholder=\"Enter your email\"></div><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-700\">Пароль</label> <input class=\"w-full px-4 py-3 rounded-lg bg-gray-50 border border-gray-200 \r\n                                       placeholder-gray-400\r\n                                       transition-colors duration-200\r\n                                       focus:bg-white focus:outline-none focus:border-black focus:ring-1 focus:ring-black\" type=\"password\" name=\"password\" required minlength=\"6\" placeholder=\"Create a password\"><p class=\"mt-1 text-sm text-gray-500\">Должно быть не менее 6 символов</p></div><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-700\">Подтвердите пароль</label> <input class=\"w-full px-4 py-3 rounded-lg bg-gray-50 border border-gray-200 \r\n                                       placeholder-gray-400\r\n                                       transition-colors duration-200\r\n                                       focus:bg-white focus:outline-none focus:border-black focus:ring-1 focus:ring-black\" type=\"password\" name=\"password_confirm\" required minlength=\"6\" placeholder=\"Confirm your password\"></div></div><button class=\"w-full bg-black text-white mt-6 px-6 py-3 rounded-lg font-medium\r\n                               transform transition-all duration-200\r\n                               hover:bg-gray-900 hover:scale-[1.01]\r\n                               active:scale-[0.99]\r\n                               focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900\" type=\"submit\">Создать аккаунт</button></form><div class=\"text-center\"><p class=\"text-sm text-gray-500\">У вас уже есть учетная запись? <button onclick=\"window.location.href=&#39;/signin&#39;\" class=\"ml-1 text-black hover:text-gray-900 underline transition-colors\">Авторизоваться</button></p></div></div></div></section>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func SignUpBase(cmp templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var4 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = cmp.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = components.Base().Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
