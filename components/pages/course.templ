package pages

import (
    "strconv"
    "constructor/internal/model"
    "constructor/components"
    "fmt"
    "strings"
)

templ Course(course *model.Course) {
    <div class="min-h-screen bg-white dark:bg-zinc-900">
        <!-- Навигационная панель -->
        <nav class="fixed top-0 w-full bg-white/90 dark:bg-zinc-900/90 backdrop-blur-sm border-b border-zinc-200 dark:border-zinc-800 z-50">
            <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center space-x-4">
                        <a href="/" class="flex items-center space-x-3">
                            <div class="w-9 h-9 bg-black dark:bg-white rounded-lg flex items-center justify-center">
                                <span class="text-white dark:text-black text-lg font-bold">C</span>
                            </div>
                            <span class="text-lg font-bold text-zinc-900 dark:text-zinc-50">Constructor</span>
                        </a>
                        <div>
                            <a href="/constructor" class="px-6 py-2.5 bg-black dark:bg-white text-white dark:text-black font-medium rounded-lg hover:bg-zinc-800 dark:hover:bg-zinc-100 transform transition-all duration-200 hover:scale-[1.02] active:scale-[0.98]">Назад</a>
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Основной контент -->
        <main class="pt-24 pb-16 px-4 sm:px-6 lg:px-8 max-w-6xl mx-auto">
            <header class="mb-8">
                <h1 class="text-3xl font-bold text-zinc-900 dark:text-zinc-50 mb-3">
                    { course.Title }
                </h1>
                <p class="text-base text-zinc-600 dark:text-zinc-400 mb-2">
                    { course.Description }
                </p>
                <div class="flex items-center space-x-4 text-sm text-zinc-500">
                    <span>Сложность: { course.DifficultyLevel }</span>
                    <span>Дата создания: { course.CreatedAt.Format("2006-01-02") }</span>
                    <span>ID Создателя: { strconv.Itoa(course.CreatorID) }</span>
                </div>
                <div class="mt-8">
                    <a href={ templ.SafeURL(fmt.Sprintf("/course/download/%d", course.ID)) } class="px-6 py-2.5 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transform transition-all duration-200 hover:scale-[1.02] active:scale-[0.98]">Скачать курс</a>
                </div>
            </header>

            <!-- Модули курса -->
            <div class="bg-white dark:bg-zinc-800 rounded-lg border border-zinc-200 dark:border-zinc-700 p-6">
                <h2 class="text-xl font-semibold mb-4">Модули курса</h2>
                <div class="space-y-4">
                    for index, module := range course.Modules {
                        <div class="border-b pb-4 last:border-b-0">
                            <h3 class="font-medium text-zinc-900 dark:text-zinc-50">
                                Модуль { strconv.Itoa(index + 1) }: { module.Title }
                            </h3>
                            <p class="text-zinc-600 dark:text-zinc-400 mb-2">
                                @templ.Raw(strings.Replace(module.Description, "\n", "<br>", -1))
                            </p>
                            <div class="text-sm text-zinc-500">
                                Кол-во уроков: { strconv.Itoa(len(module.Lessons)) }
                            </div>
                            <div class="mt-4">
                                <h4 class="text-lg font-medium">Уроки</h4>
                                <div class="space-y-4">
                                    for _, lesson := range module.Lessons {
                                        <div class="p-4 bg-zinc-100 dark:bg-zinc-700 rounded-lg">
                                            <h5 class="text-xl font-semibold">{ lesson.Title }</h5>
                                            if lesson.Type == "video" {
                                                <div class="aspect-w-16 aspect-h-9">
                                                    <iframe width="560" height="315" src={ lesson.VideoURL } title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                                                </div>
                                                <p class="text-zinc-600 dark:text-zinc-400 mt-2">@templ.Raw(strings.Replace(lesson.Content, "\n", "<br>", -1))</p>
                                            } else if lesson.Type == "text" {
                                                <p class="text-zinc-600 dark:text-zinc-400 mt-2">@templ.Raw(strings.Replace(lesson.Content, "\n", "<br>", -1))</p>
                                            } else if lesson.Type == "quiz" {
                                                <div class="mt-2">
                                                    <p class="text-zinc-600 dark:text-zinc-400">@templ.Raw(strings.Replace(lesson.Content, "\n", "<br>", -1))</p>
                                                    <a href={ templ.SafeURL(fmt.Sprintf("%s", lesson.ResourceURL)) } class="mt-2 inline-block px-4 py-2 bg-blue-600 text-white rounded-lg">Пройти тест</a>
                                                </div>
                                            } else {
                                                <p class="text-zinc-600 dark:text-zinc-400 mt-2">Тип урока не определен</p>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </main>
    </div>
}

templ CourseBase(cmp templ.Component) {
    @components.Base() {
        @cmp
    }
}